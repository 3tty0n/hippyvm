from hippy.module.url import urlsplit

VALID_URLS = [
    ('http://64.246.30.37', {'scheme': 'http', 'host': '64.246.30.37'}),
    ('http://64.246.30.37/', {'scheme': 'http', 'host': '64.246.30.37',
                              'path': '/'}),
    ('http://php.net', {'scheme': 'http', 'host': 'php.net'}),
    ('http://php.net/', {'scheme': 'http', 'host': 'php.net', 'path': '/'}),
    ('http://www.php.net:80', {'scheme': 'http', 'host': 'www.php.net',
                               'port': 80}),
    ('http://www.php.net:80/', {'scheme': 'http', 'host': 'www.php.net',
                               'path': '/', 'port': 80}),
    ('http://www.php.net/index.php', {'scheme': 'http', 'host': 'www.php.net',
                                      'path': '/index.php'}),
    ('http://www.php.net/?', {'scheme': 'http', 'host': 'www.php.net',
                              'path': '/'}),
    ('http://www.php.net:80/?', {'scheme': 'http', 'host': 'www.php.net',
                                 'path': '/', 'port': 80}),
    ('http://www.php.net:80/index.php', {'scheme': 'http',
                                         'host': 'www.php.net',
                                         'path': '/index.php', 'port': 80}),
    ('http://www.php.net:80/foo/bar/index.php',
     {'scheme': 'http', 'host': 'www.php.net',
      'path': '/foo/bar/index.php', 'port': 80}),
    ('http://www.php.net:80/this/is/a/very/deep/directory/structure/and/file.php?lots=1&of=2&parameters=3&too=4&here=5',
     {'scheme': 'http', 'host': 'www.php.net', 'port': 80,
      'path': '/this/is/a/very/deep/directory/structure/and/file.php',
      'query': 'lots=1&of=2&parameters=3&too=4&here=5'}),
    ('http://www.php.net:80/#foo', {'scheme': 'http', 'host': 'www.php.net',
                                    'path': '/', 'fragment': 'foo'}),
    ('http://www.php.net:80/?#', {'scheme': 'http', 'host': 'www.php.net',
                                    'path': '/'}),
    ('http://www.php.net:80/?test=1', {'scheme': 'http', 'host': 'www.php.net',
                                       'path': '/', 'port': 80,
                                       'query': 'test=1'}),
    ('http://secret@www.php.net:80/index.php?test=1#ref',
        {'scheme': 'http', 'host': 'www.php.net', 'port': 80,
         'user': 'secret', 'path': '/index.php', 'query': 'test=1',
         'fragment': 'ref'}),
    ('http://secret:@www.php.net/index.php?test#ref',
        {'scheme': 'http', 'host': 'www.php.net', 'port': 80,
         'user': 'secret', 'path': '/index.php', 'query': 'test',
         'fragment': 'ref'}),
    ('http://:hideout@www.php.net:80/index.php?test#ref',
        {'scheme': 'http', 'host': 'www.php.net', 'port': 80,
         'password': 'hideout', 'path': '/index.php', 'query': 'test',
         'fragment': 'ref'}),
    ('http://secret:hideout@www.php.net/index.php?test#ref',
        {'scheme': 'http', 'host': 'www.php.net', 'port': 80,
         'user': 'secret', 'password': 'hideout', 'path': '/index.php',
         'query': 'test',
         'fragment': 'ref'}),
    ('nntp://news.php.net', {'scheme': 'nntp', 'host': 'news.php.net'}),
    ('ftp://ftp.gnu.org/gnu/glic/glibc.tar.gz',
     {'scheme': 'ftp', 'host': 'ftp.gnu.org',
      'path': '/gnu/glic/glibc.tar.gz'}),
    ('mailto:me@mydomain.com', {'scheme': 'mailto',
                                'path': 'me@mydomain.com'}),
    ('file:///path/to/file', {'scheme': 'file',
                              'path': '/path/to/file'}),
    ('file://path/to/file', {'scheme': 'file', 'host': 'path',
                             'path': '/to/file'}),
    ('64.246.30.37', {'path': '64.246.30.37'}),
    ('64.246.30.37/', {'path': '64.246.30.37/'}),
    ('64.246.30.37:80/', {'host': '64.246.30.37', 'port': 80, 'path': '/'}),
    ('www.php.net:80', {'host': 'www.php.net', 'port': 80}),
    ('zlib:/path/to/my/file/file.txt', {'scheme': 'zlib',
                                        'path': '/path/to/my/file/file.txt'}),
    ('http://user:passwd@www.example.com:8080?bar=1&boom=0',
     {'scheme': 'http', 'host': 'www.example.com', 'port': 8080,
      'user': 'user', 'password': 'passwd', 'query': 'bar=1&boom=0'}),
    ('file:/path/to/file', {'scheme': 'file', 'path': '/path/to/file'}),
    ('http://foo.com#bar', {'scheme': 'http', 'host': 'foo.com',
                            'fragment': 'bar'}),
    ('scheme:', {'scheme': 'scheme'}),
    ('file:///:', {'scheme': 'file', 'path': '/:'}),
    ('http://[x:80]', {'scheme': 'http', 'host': '[x:80]'}),
    ('x://::6.5', {'scheme': 'x', 'host': ':', 'port': 6}),
    ('', {'path': ''}),
    ('scheme^://', {'path': 'scheme^://'}),
    ('//user:pass@host', {'user': 'user', 'password': 'pass', 'host': 'host'}),
]


class TestUrlSplit(object):
    def test_split_valid(self):
        pieces = ['scheme', 'host', 'user', 'password', 'path', 'query']
        for iu, expected in VALID_URLS:
            r = urlsplit(iu)
            for key in pieces:
                assert getattr(r, key) == expected.get(key, None)
